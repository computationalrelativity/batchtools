#! /bin/bash
@(#SBATCH -d afterok:@CHAINED_JOB_ID@)@
#SBATCH -p @QUEUE@
#SBATCH -J @SIMULATION_NAME@
#SBATCH -N @NODES@
#SBATCH -t @WALLTIME@
#SBATCH -o @RUNDIR@/@SIMULATION_NAME@.out
#SBATCH -e @RUNDIR@/@SIMULATION_NAME@.err
#SBATCH --mail-type=ALL
#SBATCH --mail-user=@EMAIL@

echo "Preparing:"
set -x              # Output commands
set -e              # Abort on errors
cd @RUNDIR@

# Set environment
module restore
module load PrgEnv-cray
module load craype-accel-amd-gfx90a
module load cmake
module load cray-python
module load amd-mixed/5.3.0
module load cray-mpich/8.1.23
module load cce/15.0.1
export MPICH_GPU_SUPPORT_ENABLED=1
export MPICH_MPIIO_HINTS="#:romio_cb_write=disable"

echo "Checking:"
pwd
hostname
date

echo "Environment:"
env | sort > ENVIRONMENT
echo ${SLURM_NODELIST} > NODES

# Check for restart files
test_file=$(fine parent/rst -maxdepth 1 -name "*.rst" -print -quit)
if [ -n "$test_file" ]; then
  restart_files=$(ls -t parent/rst/*.rst)
  restart_file=(${restart_files[0]})
  restart_line="-r $restart_file"
  printf "\nrestarting from $restart_file\n\n"
else
  restart_line="-i @PARFILE@"
  printf "\nstarting from beginning\n\n"
fi

srun -N @NODES@ -n $((8 * @NODES@)) \
     -c 1 --gpus-per-node=8 --gpu-bind=closest \
     @EXEC@ -d @RUNDIR@ \
     $restart_line -t @TERMINATION_TIME@
