# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = supermuc-impi-2019-05-16

### ATTENTION:
### In order to build with this optionlist, you MUST have loaded a recent GCC.
###   $ module load gcc/6
### Otherwise, compilation will likely fail with strange "hwloc" errors.

# Use default compiler loaded at login:
# module show intel
CPP = /usr/bin/cpp
FPP = /usr/bin/cpp
CC  = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/bin/intel64/icc
CXX = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/bin/intel64/icpc
F90 = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/bin/intel64/ifort
F77 = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/bin/intel64/ifort

CPPFLAGS = -DMPICH_IGNORE_CXX_SEEK # -DCCTK_DISABLE_RESTRICT
FPPFLAGS = -traditional
CFLAGS   = -g -xHost -traceback -std=c99  -U__STRICT_ANSI__
CXXFLAGS = -g -xHost -traceback -std=c++11 -D_intel_fast_memcpy=memcpy -D_intel_fast_memset=memset
F77FLAGS = -g -xHost -safe_cray_ptr -traceback -assume underscore
F90FLAGS = -g -xHost -safe_cray_ptr -traceback -assume underscore -nogen-interfaces

LIBDIRS = /dss/dsshome1/0D/di39rof2/libnuma:/lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/compiler/lib/intel64:/lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/compiler/lib/intel64_lin
LIBS    = ifcore numa

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0 -fp-model precise -Wp64 -debug all
CXX_DEBUG_FLAGS = -O0 -fp-model precise -Wp64 -debug all
F77_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format -check uninit -debug all
F90_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format -check uninit -debug all

OPTIMISE           = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -O2 -funroll-loops -ftz
CXX_OPTIMISE_FLAGS = -O2 -funroll-loops -ftz
F77_OPTIMISE_FLAGS = -O2 -fp-model precise -funroll-loops -ftz
F90_OPTIMISE_FLAGS = -O2 -fp-model precise -funroll-loops -ftz

C_NO_OPTIMISE_FLAGS    = -O0
CXX_NO_OPTIMISE_FLAGS  = -O0
F77_NO_OPTIMISE_FLAGS  = -O0
F90_NO_OPTIMISE_FLAGS  = -O0

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -p
CXX_PROFILE_FLAGS = -p
F77_PROFILE_FLAGS = -p
F90_PROFILE_FLAGS = -p

OPENMP           = yes
CPP_OPENMP_FLAGS = -D_OPENMP
FPP_OPENMP_FLAGS = -D_OPENMP
C_OPENMP_FLAGS   = -qopenmp
CXX_OPENMP_FLAGS = -qopenmp
F77_OPENMP_FLAGS = -qopenmp
F90_OPENMP_FLAGS = -qopenmp

WARN           = yes
CPP_WARN_FLAGS = -Wall
FPP_WARN_FLAGS = -Wall
C_WARN_FLAGS   = -Wall -wd810 -wd981 -wd1419
CXX_WARN_FLAGS = -Wall -wd810 -wd981 -wd1419
F77_WARN_FLAGS = -warn all -warn nointerfaces
F90_WARN_FLAGS = -warn all -warn nointerfaces

# module show mkl:
BLAS_DIR  = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/mkl/lib/intel64
BLAS_LIBS = -Wl,--start-group  mkl_intel_lp64 mkl_intel_thread mkl_core -Wl,--end-group mkl_blas95_lp64  iomp5  pthread m

# module show boost/1.61_gcc
BOOST_DIR = /lrz/sys/libraries/boost/1.61_icc_serial
BOOST_LIBS  = boost_system boost_filesystem

# module show fftw
FFTW3_DIR = /lrz/sys/libraries/fftw/3.3.7/avx512
FFTW3_LIBS = fftw3f fftw3 fftw3l m

# module show gsl
GSL_DIR = /lrz/sys/libraries/gsl/2.4

# module show hdf5
# It might be missing -lgpfs when the linking is static. 
# Investigate if it matters at all. Ask help desk otherwise.
#HDF5_DIR  = /lrz/sys/libraries/hdf5/1.8.15/serial_icc_16.0
HDF5_DIR  = BUILD
LIBSZ_DIR = BUILD#/lrz/sys/libraries/hdf5/szip_2.1_u1/lib
ZLIB_DIR  = /usr/lib64
# Introduce later to HDF5 thorn the environment variable 
# for extra HDF5 libraries the system library might be linked to:
# HDF5_EXTRA_LIBS = sz z rt dl m gpfs


#module show hwloc
HWLOC_DIR = /lrz/sys/tools/hwloc/1.11.7

LAPACK_DIR  = /lrz/sys/intel/studio2019_u3/compilers_and_libraries_2019.3.199/linux/mkl/lib/intel64
#LAPACK_LIBS =  mkl_intel_lp64 mkl_lapack95_lp64 mkl_intel_thread mkl_core  iomp5  pthread m
LAPACK_LIBS =  mkl_lapack95_lp64

# Don't include mpi++ in MPI_LIBS; this makes it impossible to build
# utilities written in Fortran
# module show mpi.ibm
MPI_DIR      = /lrz/sys/intel/studio2019_u3/impi/2019.3.199/intel64
MPI_INC_DIRS = /lrz/sys/intel/studio2019_u3/impi/2019.3.199/intel64/include
MPI_LIB_DIRS = /lrz/sys/intel/studio2019_u3/impi/2019.3.199/intel64/lib/release /lrz/sys/intel/studio2019_u3/impi/2019.3.199/intel64/lib
MPI_LIBS     = mpicxx mpifort mpi dl rt pthread

# module show papi
PAPI_DIR  = /lrz/sys/tools/papi/5.6

# module show petsc
PETSC_DIR          = /lrz/sys/libraries/petsc/3.8.2/CMUC3/complex_mpi.intel_2017_opt
#PETSC_ARCH         = 
PETSC_ARCH_LIBS    = mkl_blas95_lp64 mkl_intel_lp64 mkl_intel_thread mkl_core iomp5 pthread m  X11
