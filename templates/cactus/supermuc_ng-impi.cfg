# Whenever this version string changes,
# the application is configured and rebuilt from scratch
VERSION = supermuc_ng-impi-2021-07-16

# Used with ET_2020

CPP = cpp
FPP = cpp
CC  = icc
CXX = icpc
F90 = ifort
F77 = ifort

CPPFLAGS =
FPPFLAGS = -traditional
CFLAGS   = -g -xHost -traceback -std=c99  -U__STRICT_ANSI__
CXXFLAGS = -g -xHost -traceback -std=c++11 -D_intel_fast_memcpy=memcpy -D_intel_fast_memset=memset
F77FLAGS = -g -xHost -safe_cray_ptr -traceback -assume underscore
F90FLAGS = -g -xHost -safe_cray_ptr -traceback -assume underscore -nogen-interfaces

LIBS = numa ifcore

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0 -fp-model precise -Wp64 -debug all
CXX_DEBUG_FLAGS = -O0 -fp-model precise -Wp64 -debug all
F77_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format -check uninit -debug all
F90_DEBUG_FLAGS = -O0 -fp-model precise -check bounds -check format -check uninit -debug all

OPTIMISE           = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -O2 -funroll-loops -ftz
CXX_OPTIMISE_FLAGS = -O2 -funroll-loops -ftz
F77_OPTIMISE_FLAGS = -O2 -fp-model precise -funroll-loops -ftz
F90_OPTIMISE_FLAGS = -O2 -fp-model precise -funroll-loops -ftz

C_NO_OPTIMISE_FLAGS    = -O0
CXX_NO_OPTIMISE_FLAGS  = -O0
F77_NO_OPTIMISE_FLAGS  = -O0
F90_NO_OPTIMISE_FLAGS  = -O0

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -p
CXX_PROFILE_FLAGS = -p
F77_PROFILE_FLAGS = -p
F90_PROFILE_FLAGS = -p

OPENMP           = yes
CPP_OPENMP_FLAGS = -D_OPENMP
FPP_OPENMP_FLAGS = -D_OPENMP
C_OPENMP_FLAGS   = -qopenmp
CXX_OPENMP_FLAGS = -qopenmp
F77_OPENMP_FLAGS = -qopenmp
F90_OPENMP_FLAGS = -qopenmp

WARN           = yes
CPP_WARN_FLAGS = -Wall
FPP_WARN_FLAGS = -Wall
C_WARN_FLAGS   = -Wall -wd810 -wd981 -wd1419
CXX_WARN_FLAGS = -Wall -wd810 -wd981 -wd1419
F77_WARN_FLAGS = -warn all -warn nointerfaces
F90_WARN_FLAGS = -warn all -warn nointerfaces

BLAS_DIR  = NO_BUILD
BLAS_LIBS = -mkl=sequential -static-intel

BOOST_DIR = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/skylake_avx512/boost/1.73.0-intel-flijp67
#BOOST_LIBS  = boost_system boost_filesystem

FFTW3_DIR = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/skylake_avx512/fftw/3.3.8-intel-ysseeml/
FFTW3_LIBS = -Wl,-static -L/dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/skylake_avx512/fftw/3.3.8-intel-ysseeml/lib -lfftw3f -lfftw3 -lfftw3l -Wl,-dy # $FFTW_LIB

GSL_DIR = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/skylake_avx512/gsl/2.5-intel-d37qldg

HDF5_DIR  = BUILD

LIBSZ_DIR = BUILD
#ZLIB_DIR  = /usr/lib64

HWLOC_DIR = BUILD
HWLOC_EXTRA_LIBS = -lnuma

LAPACK_DIR  = NO_BUILD
#LAPACK_LIBS =  mkl_intel_lp64 mkl_lapack95_lp64 mkl_intel_thread mkl_core  iomp5  pthread m
LAPACK_LIBS =  mkl_lapack95_lp64

# Don't include mpi++ in MPI_LIBS; this makes it impossible to build utilities written in Fortran
MPI_DIR      = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/x86_64/intel-mpi/2019.8.254-gcc-vyzek4m/compilers_and_libraries_2020.2.254/linux/mpi/intel64
MPI_INC_DIRS = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/x86_64/intel-mpi/2019.8.254-gcc-vyzek4m/compilers_and_libraries_2020.2.254/linux/mpi/intel64/include
MPI_LIB_DIRS = /dss/dsshome1/lrz/sys/spack/release/21.1.1/opt/x86_64/intel-mpi/2019.8.254-gcc-vyzek4m/compilers_and_libraries_2020.2.254/linux/mpi/intel64/lib/release
MPI_LIBS     = mpi # mpicxx mpi pthread mpifort

OPENBLAS_DIR  = NO_BUILD
OPENBLAS_LIBS = -mkl=sequential -static-intel

PTHREADS_DIR = NO_BUILD
PTHREADS_LIBS = pthread
